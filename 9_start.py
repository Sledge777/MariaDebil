import mysql.connector
from decimal import Decimal
import re

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def create_connection():
    return mysql.connector.connect(
        host="localhost",
        user="root",
        password="Ms_phone_fox62052!",
        database="ms_phone"
    )

# –ú–∞–ø–ø–∏–Ω–≥ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
coefficient_mapping = {
    '–ù–∞_—Å–≤—è–∑–∏': [0.8, 1.0, 1.2],
    '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã': [0.8, 1.0, 1.2],
    'LifeStyle': [0.8, 1.0, 1.2],
    'MS_Home': [0.8, 1.0, 1.2],
    '–ù–∞—Å—Ç—Ä–æ–π–∫–∏': [1.0, 1.2, 1.5],
    '–°—Ç—Ä–∞—Ö–æ–≤–∫–∏': [1.0, 1.2, 1.5],
    '–°–∏–º_–∫–∞—Ä—Ç—ã': [0.3, 0.4, 0.5],
    '–ü–æ–¥–∞—Ä–∫–∏': [1.0, 1.2, 1.5],
    '–¢–í': [0.8, 1.0, 1.2]
}

# –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –≤–∏–¥—É
def normalize_category_name(category):
    return category.replace(' ', '_')

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
def get_coefficient(category, percentage):
    category = normalize_category_name(category)
    if category not in coefficient_mapping:
        return 1
    if percentage < 90:
        return coefficient_mapping[category][0]
    elif 90 <= percentage <= 100:
        return coefficient_mapping[category][1]
    else:
        return coefficient_mapping[category][2]

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã KPI, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
def create_sales_detail_kpi_table(cursor):
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS sales_detail_kpi (
            id INT AUTO_INCREMENT PRIMARY KEY,
            store TEXT,
            regional_director TEXT,
            employee TEXT,
            category TEXT,
            sale_date DATETIME,
            goods_name TEXT,
            total_sales DECIMAL(12, 2),
            total_commission DECIMAL(12, 2),
            total_quantity INT,
            goods_price_group TEXT,
            kpi_coefficient DECIMAL(5, 2),
            total_sum DECIMAL(12, 2)
        )
    """)

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã KPI —Å —É—á–µ—Ç–æ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –∏ –±–æ–Ω—É—Å–∞ Xiaomi
def update_sales_detail_kpi(cursor, conn):
    cursor.execute("""
        SELECT id, store, category, total_commission
        FROM sales_detail
    """)
    sales_data = cursor.fetchall()

    for row in sales_data:
        sales_id = row[0]
        store = row[1]
        category = row[2]
        base_commission = row[3]

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–ª–∞–Ω–∞
        cursor.execute("""
            SELECT total_net_percentage
            FROM ms_phone_performance
            WHERE store = %s
        """, (store,))
        performance_data = cursor.fetchone()

        if performance_data:
            total_net_percentage = performance_data[0]

            # –ü–æ–ª—É—á–∞–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç KPI –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –ø–ª–∞–Ω–∞
            coefficient = get_coefficient(category, total_net_percentage)

            # –ò—Å—Ö–æ–¥–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è
            total_commission = base_commission

            # –£—Å–ª–æ–≤–∏–µ –Ω–∞ –±–æ–Ω—É—Å Xiaomi
            if (
                re.search(r'xiaomi', store, re.IGNORECASE)
                and total_net_percentage >= 100
                and normalize_category_name(category).lower() == '–Ω–∞_—Å–≤—è–∑–∏'
            ):
                bonus = base_commission * Decimal("0.25")
                total_commission += bonus
                print(f"üéØ –ë–æ–Ω—É—Å Xiaomi –¥–æ–±–∞–≤–ª–µ–Ω: {bonus:.2f} ‚Üí –º–∞–≥–∞–∑–∏–Ω: {store}, –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category}")

            # –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ —Å —É—á–µ—Ç–æ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞
            total_sum = total_commission * Decimal(coefficient)

            # –í—Å—Ç–∞–≤–∫–∞ –≤ –∏—Ç–æ–≥–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
            cursor.execute("""
                INSERT INTO sales_detail_kpi (
                    store, regional_director, employee, category, sale_date, goods_name,
                    total_sales, total_commission, total_quantity, goods_price_group,
                    kpi_coefficient, total_sum
                )
                SELECT store, regional_director, employee, category, sale_date, goods_name,
                       total_sales, %s, total_quantity, goods_price_group,
                       %s, %s
                FROM sales_detail WHERE id = %s
            """, (total_commission, coefficient, total_sum, sales_id))

    conn.commit()
    print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ sales_detail_kpi.")

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    conn = create_connection()
    cursor = conn.cursor()

    create_sales_detail_kpi_table(cursor)
    update_sales_detail_kpi(cursor, conn)

    cursor.close()
    conn.close()
